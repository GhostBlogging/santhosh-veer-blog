function flyingPages(options={}){const toPrefetch=new Set();const alreadyPrefetched=new Set();const prefetcher=document.createElement("link");const isNativePrefetchSupported=prefetcher.relList&&prefetcher.relList.supports&&prefetcher.relList.supports("prefetch");const isSlowConnection=navigator.connection&&(navigator.connection.saveData||(navigator.connection.effectiveType||"").includes("2g"));const isIE=navigator.userAgent.indexOf("MSIE ")>-1||navigator.userAgent.indexOf("Trident/")>-1;const prefetch=url=>{if(isNativePrefetchSupported){return new Promise((resolve,reject)=>{const link=document.createElement(`link`);link.rel=`prefetch`;link.href=url;link.onload=resolve;link.onerror=reject;document.head.appendChild(link)})}
return new Promise((resolve,reject)=>{const req=new XMLHttpRequest();req.open(`GET`,url,(req.withCredentials=!0));req.onload=()=>{req.status===200?resolve():reject()};req.send()})};const prefetchWithTimeout=url=>{const timer=setTimeout(()=>stopPreloading(),5000);prefetch(url).catch(()=>stopPreloading()).finally(()=>clearTimeout(timer))};const addUrlToQueue=(url,processImmediately=!1)=>{if(alreadyPrefetched.has(url)||toPrefetch.has(url))return;const origin=window.location.origin;if(url.substring(0,origin.length)!==origin)return;if(window.location.href===url)return;for(let i=0;i<window.FPConfig.ignoreKeywords.length;i++){if(url.includes(window.FPConfig.ignoreKeywords[i]))return}
if(processImmediately){prefetchWithTimeout(url);alreadyPrefetched.add(url)}else toPrefetch.add(url)};const linksObserver=new IntersectionObserver(entries=>{entries.forEach(entry=>{if(entry.isIntersecting){const url=entry.target.href;addUrlToQueue(url,!window.FPConfig.maxRPS)}})});const startQueue=()=>setInterval(()=>{Array.from(toPrefetch).slice(0,window.FPConfig.maxRPS).forEach(url=>{prefetchWithTimeout(url);alreadyPrefetched.add(url);toPrefetch.delete(url)})},1000);let hoverTimer=null;const mouseOverListener=event=>{const elm=event.target.closest("a");if(elm&&elm.href&&!alreadyPrefetched.has(elm.href)){hoverTimer=setTimeout(()=>{addUrlToQueue(elm.href,!0)},window.FPConfig.hoverDelay)}};const touchStartListener=event=>{const elm=event.target.closest("a");if(elm&&elm.href&&!alreadyPrefetched.has(elm.href))
addUrlToQueue(elm.href,!0)};const mouseOutListener=event=>{const elm=event.target.closest("a");if(elm&&elm.href&&!alreadyPrefetched.has(elm.href)){clearTimeout(hoverTimer)}};const requestIdleCallback=window.requestIdleCallback||function(cb){const start=Date.now();return setTimeout(function(){cb({didTimeout:!1,timeRemaining:function(){return Math.max(0,50-(Date.now()-start))}})},1)};const stopPreloading=()=>{document.querySelectorAll("a").forEach(e=>linksObserver.unobserve(e));toPrefetch.clear();document.removeEventListener("mouseover",mouseOverListener,!0);document.removeEventListener("mouseout",mouseOutListener,!0);document.removeEventListener("touchstart",touchStartListener,!0)};if(isSlowConnection||isIE)return;const defaultOptions={delay:0,ignoreKeywords:[],maxRPS:3,hoverDelay:50};window.FPConfig=Object.assign(defaultOptions,options);startQueue();requestIdleCallback(()=>setTimeout(()=>document.querySelectorAll("a").forEach(e=>linksObserver.observe(e)),window.FPConfig.delay*1000));const listenerOptions={capture:!0,passive:!0};document.addEventListener("mouseover",mouseOverListener,listenerOptions);document.addEventListener("mouseout",mouseOutListener,listenerOptions);document.addEventListener("touchstart",touchStartListener,listenerOptions)}
